{"version":3,"sources":["components/pages/SingleComicPage.js"],"names":["View","comic","title","description","pageCount","thumbnail","language","price","className","width","height","src","alt","to","SingleComicPage","useMarvelService","error","loading","getComic","clearError","comicId","useParams","useState","setComic","useEffect","updateComic","then","onComicLoaded","errorMessage","spiner","content"],"mappings":"uOA6CMA,EAAO,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACNC,EAA6DD,EAA7DC,MAAOC,EAAsDF,EAAtDE,YAAaC,EAAyCH,EAAzCG,UAAWC,EAA8BJ,EAA9BI,UAAWC,EAAmBL,EAAnBK,SAAUC,EAASN,EAATM,MAE3D,OACE,sBAAKC,UAAU,qBAAf,UACE,qBAAKA,UAAU,oBACbC,MAAO,MAAOC,OAAQ,MACtBC,IAAKN,EAAWO,IAAKV,IACvB,sBAAKM,UAAU,qBAAf,UACE,oBAAIA,UAAU,qBAAd,SAAoCN,IACpC,mBAAGM,UAAU,sBAAb,SAAoCL,IACpC,mBAAGK,UAAU,sBAAb,SAAoCJ,IACpC,mBAAGI,UAAU,sBAAb,SAAoCF,IACpC,qBAAKE,UAAU,sBAAf,SAAsCD,OAExC,cAAC,IAAD,CAAMC,UAAU,qBAAqBK,GAAG,UAAxC,6BAKSC,UAvDS,WACtB,MAA+CC,cAAxCC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,SAAUC,EAAjC,EAAiCA,WACzBC,EAAYC,cAAZD,QAER,EAA0BE,mBAAS,MAAnC,mBAAOrB,EAAP,KAAcsB,EAAd,KAEAC,qBAAU,WACRC,MACC,CAACL,IAEJ,IAAMK,EAAc,WAClBN,IACAD,EAASE,GACNM,KAAKC,IAGJA,EAAgB,SAAC1B,GACrBsB,EAAStB,IAGL2B,EAAeZ,EAAQ,cAAC,IAAD,IAAkB,KACzCa,EAASZ,EAAU,cAAC,IAAD,IAAa,KAChCa,EAAYb,GAAWD,IAAUf,EAAiC,KAAxB,cAACD,EAAD,CAAMC,MAAOA,IAE7D,OACE,0BAASO,UAAU,eAAnB,UACE,qBAAIA,UAAU,kBAAd,qBAAyCP,EAAQA,EAAMC,MAAQ,QAC/D,cAAC,IAAD,IACC0B,EACAC,EACAC","file":"static/js/7.fd53f566.chunk.js","sourcesContent":["import { useParams, Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spiner/spiner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport AppBanner from '../appBanner/AppBanner';\n\nimport './singleComicPage.scss';\n\nconst SingleComicPage = () => {\n  const {error, loading, getComic, clearError} = useMarvelService();\n  const { comicId } = useParams();\n\n  const [comic, setComic] = useState(null);\n\n  useEffect(() => {\n    updateComic()\n  }, [comicId]);\n\n  const updateComic = () => {\n    clearError();\n    getComic(comicId)\n      .then(onComicLoaded)\n  }\n\n  const onComicLoaded = (comic) => {\n    setComic(comic)\n  }\n\n  const errorMessage = error ? <ErrorMessage/> : null;\n  const spiner = loading ? <Spinner/> : null;\n  const content = !(loading || error || !comic) ? <View comic={comic}/> : null;\n\n  return (\n    <article className='single-comic'>\n      <h2 className='visually-hidden'>comic - {comic ? comic.title : null}</h2>\n      <AppBanner/>\n      {errorMessage}\n      {spiner}\n      {content}\n    </article>\n  )\n}\n\nconst View = ({comic}) => {\n  const {title, description, pageCount, thumbnail, language, price} = comic;\n\n  return(\n    <div className=\"single-comic__wrap\">\n      <img className=\"single-comic__img\"\n        width={'250'} height={'250'}\n        src={thumbnail} alt={title} />\n      <div className=\"single-comic__info\">\n        <h3 className=\"single-comic__name\">{title}</h3>\n        <p className=\"single-comic__descr\">{description}</p>\n        <p className=\"single-comic__descr\">{pageCount}</p>\n        <p className=\"single-comic__descr\">{language}</p>\n        <div className=\"single-comic__price\">{price}</div>\n      </div>\n      <Link className=\"single-comic__back\" to=\"/comics\">Back to all</Link>\n    </div>\n  );\n}\n\nexport default SingleComicPage;\n"],"sourceRoot":""}