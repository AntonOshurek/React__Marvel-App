{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/comicsList/ComicsList.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","ComicsList","useState","comicsList","setComicsList","newItemLoading","setnewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","useMarvelService","loading","error","getAllComics","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","items","map","item","i","className","to","id","width","height","src","thumbnail","alt","title","price","renderItems","errorMessage","spinner","disabled","style","onClick"],"mappings":"qLAIe,SAASA,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE,K,2IIkF/EC,UA7EI,WAEjB,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA4CF,oBAAS,GAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KACA,EAA4BJ,mBAAS,GAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAAsCN,oBAAS,GAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KAEA,EAAuCC,cAAhCC,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,MAAOC,EAAvB,EAAuBA,aAEvBC,qBAAU,WACRC,EAAUT,GAAQ,KACjB,IAEH,IAAMS,EAAY,SAACT,EAAQU,GACfX,GAAVW,GACAH,EAAaP,GACVW,KAAKC,IAGJA,EAAqB,SAACC,GAC1B,IAAIC,GAAQ,EACRD,EAAcE,OAAS,IACzBD,GAAQ,GAEVjB,EAAc,GAAD,mBAAKD,GAAL,YAAoBiB,KACjCd,GAAkB,GAClBE,EAAUD,EAAS,GACnBG,EAAeW,IAyBjB,IAAME,EAtBN,SAAsBjC,GACpB,IAAMiC,EAAQjC,EAAIkC,KAAI,SAACC,EAAMC,GAC3B,OACE,oBAAIC,UAAU,eAAd,SACE,eAAC,IAAD,CAAMA,UAAU,eAAeC,GAAE,kBAAaH,EAAKI,IAAnD,UACE,qBAAKF,UAAU,cACbG,MAAO,MAAOC,OAAQ,MACtBC,IAAKP,EAAKQ,UAAWC,IAAKT,EAAKU,QACjC,oBAAIR,UAAU,gBAAd,SAA+BF,EAAKU,QACpC,qBAAKR,UAAU,gBAAf,SAAgCF,EAAKW,YANPV,MAYtC,OACE,oBAAIC,UAAU,eAAd,SACGJ,IAKOc,CAAYlC,GAEpBmC,EAAezB,EAAQ,cAAC,IAAD,IAAkB,KACzC0B,EAAU3B,IAAYP,EAAiB,cAAC,IAAD,IAAa,KAE1D,OACE,0BAASsB,UAAU,SAAnB,UACE,oBAAIA,UAAU,kBAAd,yBACA,cAAC,IAAD,IACA,sBAAKA,UAAU,eAAf,UACGW,EACAC,EACAhB,EACD,wBACEiB,SAAUnC,EACVoC,MAAO,CAAC,QAAYhC,EAAc,OAAS,SAC3CkB,UAAU,kDACVe,QAAS,kBAAM1B,EAAUT,IAJ3B,SAKE,qBAAKoB,UAAU,QAAf","file":"static/js/6.77728a24.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spiner/spiner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport AppBanner from \"../appBanner/AppBanner\";\n\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n\n  const [comicsList, setComicsList] = useState([]);\n  const [newItemLoading, setnewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(0);\n  const [comicsEnded, setComicsEnded] = useState(false);\n\n  const {loading, error, getAllComics} = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n  }, [])\n\n  const onRequest = (offset, initial) => {\n    initial ? setnewItemLoading(false) : setnewItemLoading(true);\n    getAllComics(offset)\n      .then(onComicsListLoaded)\n  }\n\n  const onComicsListLoaded = (newComicsList) => {\n    let ended = false;\n    if (newComicsList.length < 8) {\n      ended = true;\n    }\n    setComicsList([...comicsList, ...newComicsList]);\n    setnewItemLoading(false);\n    setOffset(offset + 8);\n    setComicsEnded(ended);\n  }\n\n  function renderItems (arr) {\n    const items = arr.map((item, i) => {\n      return (\n        <li className=\"comics__item\" key={i}>\n          <Link className='comics__link' to={`/comics/${item.id}`}>\n            <img className='comics__img'\n              width={'250'} height={'400'}\n              src={item.thumbnail} alt={item.title}/>\n            <h3 className=\"comics__title\">{item.title}</h3>\n            <div className=\"comics__price\">{item.price}</div>\n          </Link>\n        </li>\n      )\n    })\n\n    return (\n      <ul className=\"comics__list\">\n        {items}\n      </ul>\n    )\n  }\n\n  const items = renderItems(comicsList);\n\n  const errorMessage = error ? <ErrorMessage/> : null;\n  const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n  return (\n    <article className='comics'>\n      <h2 className='visually-hidden'>Comics list</h2>\n      <AppBanner/>\n      <div className=\"comics__wrap\">\n        {errorMessage}\n        {spinner}\n        {items}\n        <button\n          disabled={newItemLoading}\n          style={{'display' : comicsEnded ? 'none' : 'block'}}\n          className=\"comics__button button button__main button__long\"\n          onClick={() => onRequest(offset)}>\n          <div className=\"inner\">load more</div>\n        </button>\n      </div>\n    </article>\n  )\n}\n\nexport default ComicsList;\n"],"sourceRoot":""}