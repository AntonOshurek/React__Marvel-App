{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","components/pages/MainPage.js"],"names":["ErrorMessage","src","img","style","display","width","height","objectFit","margin","alt","_apiBase","_apiKey","useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","getAllCharacters","offset","resultat","results","map","_transformCharacter","getCharacter","id","getAllComics","res","_transformComics","getComic","character","name","description","thumbnails","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","pageCount","language","textObjects","price","prices","View","imgStyle","className","href","RandomChar","setCharacter","useEffect","updateChar","timerId","setInterval","clearInterval","onCharacterLoaded","minValue","Math","floor","random","then","errorMessage","spiner","content","onClick","type","CharList","props","charList","setCharList","newItemLoading","setNewItemLoading","setOffset","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","length","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","onCharacterSelected","onKeyPress","e","key","tabIndex","ref","el","renderItems","spinner","disabled","Skeleton","CharInfo","updateCharacter","charId","skeleton","ErrorBoundary","state","errorInfo","console","log","this","setState","children","Component","MainPage","selectedCharacter","setChar"],"mappings":"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","file":"static/js/4.a4073605.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <img src={img} style={{ display:'block', width:'250px', height:'250px',\r\n    objectFit:'contain', margin:'0 auto'}} alt='error message image'/>\r\n  )\r\n}\r\n\r\nexport default ErrorMessage;\r\n","import { useHttp } from '../hooks/http.hook';\n\nconst _apiBase = 'https://gateway.marvel.com:443/v1/public/';\nconst _apiKey = 'apikey=5af7a0d601852abb88e6ece45814a55f';\nconst _baseOffset = 210;\n\nconst useMarvelService = () => {\n\n  const {loading, request, error, clearError} = useHttp();\n\n  const getAllCharacters = async (offset = _baseOffset) => {\n    const resultat = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n    return resultat.data.results.map(_transformCharacter);\n  }\n\n  const getCharacter = async (id) => {\n    const resultat = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n    return _transformCharacter(resultat.data.results[0]);\n  }\n\n  const getAllComics = async (offset = 0) => {\n    const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\n    return res.data.results.map(_transformComics);\n  }\n\n  const getComic = async (id) => {\n      const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n      return _transformComics(res.data.results[0]);\n  }\n\n  const _transformCharacter = (character) => {\n    return {\n      id: character.id,\n      name: character.name,\n      description: character.description,\n      thumbnails: character.thumbnail.path + '.' + character.thumbnail.extension,\n      homepage: character.urls[0].url,\n      wiki: character.urls[1].url,\n      comics: character.comics.items\n    }\n  }\n\n  const _transformComics = (comics) => {\n    return {\n      id: comics.id,\n      title: comics.title,\n      description: comics.description || 'There is no description',\n      pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\n      thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\n      language: comics.textObjects.language || 'en-us',\n      price: comics.prices.price ? `${comics.prices.price}$` : 'not available'\n    }\n  }\n\n  return {loading, error, getAllCharacters, getCharacter, clearError, getAllComics, getComic};\n\n}\n\n\nexport default useMarvelService;\n","import { useState, useCallback } from \"react\";\n\nexport const useHttp = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n\n    setLoading(true);\n\n    try {\n      const response = await fetch(url, {method, body, headers});\n      if(!response.ok) {\n        throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n      }\n      const data = await response.json();\n      setLoading(false);\n      return data;\n    } catch(error) {\n      setLoading(false);\n      setError(error.message);\n      throw error;\n    }\n  }, []);\n\n  const clearError = useCallback(() => setError(null), []);\n\n  return {loading, request, error, clearError};\n};\n\n","import { useState, useEffect } from 'react';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spiner/spiner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './randomChar.scss';\n\nconst RandomChar = () => {\n\n  const [character, setCharacter] = useState(null);\n  const {loading, error, getCharacter, clearError} = useMarvelService();\n\n  useEffect(() => {\n    updateChar();\n    const timerId = setInterval(updateChar, 60000);\n\n    return () => {\n      clearInterval(timerId)\n    }\n  }, []);\n\n  const onCharacterLoaded = (character) => {\n    setCharacter(character);\n  }\n\n  const updateChar = () => {\n    const minValue = 1011000;\n    const maxValue = 1011400;\n    clearError();\n    const id = Math.floor(Math.random() * (maxValue - minValue) + minValue);\n      getCharacter(id)\n        .then(onCharacterLoaded)\n  }\n\n  const errorMessage = error ? <ErrorMessage/> : null;\n  const spiner = loading ? <Spinner/> : null;\n  const content = !(loading || error || !character) ? <View character={character}/> : null;\n\n  return (\n    <section className=\"randomchar\">\n      <h2 className=\"visually-hidden\">random character for you!</h2>\n\n      {errorMessage}\n      {spiner}\n      {content}\n\n      <article className=\"randomchar__static\">\n        <p className=\"randomchar__title\">\n          Random character for today!<br/>\n          Do you want to get to know him better?\n        </p>\n        <p className=\"randomchar__title\">\n          Or choose another one\n        </p>\n        <button onClick={updateChar} className=\"randomchar__try-button button button__main\" type=\"button\">\n          <div className=\"inner\">try it</div>\n        </button>\n      </article>\n    </section>\n  )\n\n}\n\nconst View = ({character}) => {\n  const {name, description, thumbnails, homepage, wiki} = character;\n  let imgStyle = {'objectFit' : 'cover'};\n  if (thumbnails === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n    imgStyle = {'objectFit' : 'contain'};\n  }\n\n  return (\n    <article className=\"randomchar__block\">\n      <img className=\"randomchar__img\" width=\"180\" height=\"180\" src={thumbnails} alt={'Random character - ' + name} style={imgStyle}/>\n      <div className=\"randomchar__info\">\n        <p className=\"randomchar__name\">{name}</p>\n        <p className=\"randomchar__descr\">\n          {description ? description : 'sory! We dont have description for this character'}\n        </p>\n        <div className=\"randomchar__links\">\n          <a className=\"button button__main\" href={homepage}>\n            <div className=\"inner\">homepage</div>\n          </a>\n          <a className=\"button button__secondary\" href={wiki}>\n            <div className=\"inner\">Wiki</div>\n          </a>\n        </div>\n      </div>\n    </article>\n  )\n}\n\nexport default RandomChar;\n","import { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spiner/spiner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './charList.scss';\n\nconst CharList = (props) => {\n\n  const startCharactersItemsOffset = 210;\n\n  const [charList, setCharList] = useState([]);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(startCharactersItemsOffset);\n  const [charEnded, setCharEnded] = useState(false);\n\n  const {loading, error, getAllCharacters} = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemLoading(false) : setNewItemLoading(true)\n    getAllCharacters(offset)\n      .then(onCharListLoaded)\n  }\n\n  const nextCharactersOffset = 9;\n\n  const onCharListLoaded = (newCharList) => {\n    let ended = false;\n    if(newCharList.length < 9) {\n      ended = true;\n    }\n\n    setCharList(charList => [...charList, ...newCharList]);\n    setNewItemLoading(newItemLoading => false);\n    setOffset(offset => offset + nextCharactersOffset);\n    setCharEnded(charEnded => ended);\n  }\n\n  const itemRefs = useRef([]);\n\n  const focusOnItem = (id) => {\n    itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n    itemRefs.current[id].classList.add('char__item_selected');\n    itemRefs.current[id].focus();\n  }\n\n  function renderItems(arr) {\n    const items =  arr.map((item, i) => {\n      let imgStyle = {'objectFit' : 'cover'};\n      if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'unset'};\n      }\n\n      return (\n        <li className=\"characters__item\"\n            key={item.id}\n            onClick={() => {\n              props.onCharacterSelected(item.id)\n              focusOnItem(i);\n            }}\n            onKeyPress={(e) => {\n              if (e.key === ' ' || e.key === \"Enter\") {\n                props.onCharacterSelected(item.id);\n                focusOnItem(i);\n              }\n            }}\n            tabIndex={0}\n            ref={el => itemRefs.current[i] = el}>\n          <img className=\"characters__image\" width=\"200\" height=\"200\" src={item.thumbnails} alt={item.name} style={imgStyle}/>\n          <h3 className=\"characters__name\">{item.name}</h3>\n        </li>\n      )\n    });\n    return (\n      <ul className=\"characters__list\">\n        {items}\n      </ul>\n    )\n  }\n\n  const items = renderItems(charList);\n\n  const errorMessage = error ? <ErrorMessage/> : null;\n  const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n  return (\n    <section className=\"characters\">\n      <h2 className=\"visually-hidden\">Characters list!</h2>\n      {errorMessage}\n      {spinner}\n      {items}\n      <button className=\"characters__load-button button button__main\" type=\"button\"\n        disabled={newItemLoading}\n        style={{'display': charEnded ? 'none' : 'block'}}\n        onClick={() => onRequest(offset)}>\n        <div className=\"inner\">load more</div>\n      </button>\n    </section>\n  )\n\n}\n\nCharList.propTypes = {\n  onCharacterSelected: PropTypes.func.isRequired,\n}\n\nexport default CharList;\n","import './skeleton.scss';\r\n\r\nconst Skeleton = () => {\r\n    return (\r\n        <>\r\n            <p className=\"char__select\">Please select a character to see information</p>\r\n            <div className=\"skeleton\">\r\n                <div className=\"pulse skeleton__header\">\r\n                    <div className=\"pulse skeleton__circle\"></div>\r\n                    <div className=\"pulse skeleton__mini\"></div>\r\n                </div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Skeleton;","import { useState, useEffect, useRef, useMemo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spiner/spiner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n  const [character, setCharacter] = useState(null);\n  const {error, loading, getCharacter, clearError} = useMarvelService();\n\n  useEffect(() => {\n    updateCharacter()\n  }, [props.charId]);\n\n  const updateCharacter = () => {\n    const {charId} = props;\n    if(!charId) {\n      return;\n    }\n    clearError();\n    getCharacter(charId)\n      .then(onCharacterLoaded)\n  }\n\n  const onCharacterLoaded = (character) => {\n    setCharacter(character);\n  }\n\n  const skeleton = character || loading || error ? null : <Skeleton/>;\n  const errorMessage = error ? <ErrorMessage/> : null;\n  const spiner = loading ? <Spinner/> : null;\n  const content = !(loading || error || !character) ? <View character={character}/> : null;\n\n  return (\n    <article className='character-info'>\n      {skeleton}\n      {errorMessage}\n      {spiner}\n      {content}\n    </article>\n  )\n}\n\nconst View = ({character}) => {\n\n  const {name, description, thumbnails, homepage, wiki, comics} = character;\n\n  let imgStyle = {'objectFit' : 'cover'};\n  if (thumbnails === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n    imgStyle = {'objectFit' : 'contain'};\n  }\n\n  return(\n    <>\n      <div className=\"character-info__basics\">\n        <img className=\"character-info__image\"\n          width=\"150\" height=\"150\"\n          src={thumbnails} alt={name}\n          style={imgStyle}/>\n        <div className=\"character-info__main\">\n          <h2 className=\"character-info__name\">{name}</h2>\n          <a className=\"button button__main\" href={homepage}>\n            <div className=\"inner\">homepage</div>\n          </a>\n          <a className=\"button button__secondary\" href={wiki}>\n            <div className=\"inner\">Wiki</div>\n          </a>\n        </div>\n      </div>\n      <p className=\"character-info__description\">\n       {description}\n      </p>\n      <p className=\"character-info__comics\">Comics:</p>\n      <ul className=\"character-info__comics-list\">\n        {comics.length > 0 ? null : 'There is no comics with this character'}\n        {\n          comics.map((item, id) => {\n            // eslint-disable-next-line array-callback-return\n            if (id > 9) return;\n            return(\n              <li key={id} className=\"character-info__comics-item\">\n                <p>{item.name}</p>\n              </li>\n            )\n          })\n        }\n      </ul>\n    </>\n  )\n}\n\nCharInfo.propTypes = {\n  charId: PropTypes.number,\n}\n\nexport default CharInfo;\n","import { Component } from \"react/cjs/react.production.min\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  state = {\r\n    error: false,\r\n  }\r\n\r\n  // static getDerivedStateFromErorr(error) {\r\n  //   return {error: true};\r\n  // }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    console.log(error, errorInfo);\r\n    this.setState({\r\n      error: true\r\n    })\r\n  }\r\n\r\n  render() {\r\n    if(this.state.error) {\r\n      return <ErrorMessage/>\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import { useState } from \"react\";\n\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nconst MainPage = () => {\n\n  const [selectedCharacter, setChar] = useState(null);\n\n  const onCharacterSelected = (id) => {\n    setChar(id);\n  }\n\n  return (\n    <>\n      <ErrorBoundary>\n        <RandomChar/>\n      </ErrorBoundary>\n      <div className=\"characters-content\">\n        <ErrorBoundary>\n          <CharList onCharacterSelected={onCharacterSelected}/>\n        </ErrorBoundary>\n        <ErrorBoundary>\n          <CharInfo charId={selectedCharacter}/>\n        </ErrorBoundary>\n      </div>\n    </>\n  )\n}\n\nexport default MainPage;\n"],"sourceRoot":""}